/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-26 07:48:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	

      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<h4>\r\n");
      out.write("		<small>즐거운 web</small>\r\n");
      out.write("		dd님 환영합니다.\r\n");
      out.write("	</h4>\r\n");
      out.write("	<hr>\r\n");
      out.write("	<div class=\"col-sm-10\">\r\n");
      out.write("		<div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\r\n");
      out.write("			<!-- Indicators -->\r\n");
      out.write("			<ol class=\"carousel-indicators\">\r\n");
      out.write("				<li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n");
      out.write("				<li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\r\n");
      out.write("			</ol>\r\n");
      out.write("\r\n");
      out.write("			<!-- Wrapper for slides -->\r\n");
      out.write("			<div class=\"carousel-inner\" role=\"listbox\">\r\n");
      out.write("				<div class=\"item active\">\r\n");
      out.write("					<img src=\"/springmvc/resources/images/m_garden01.jpg\" alt=\"Image\" width=\"800\" height=\"320\">\r\n");
      out.write("					<div class=\"carousel-caption\">\r\n");
      out.write("						<h3>이번주는 기본 웹</h3>\r\n");
      out.write("						<p>servlet,jsp 기본기능...</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"item\">\r\n");
      out.write("					<img src=\"/springmvc/resources/images/m_garden02.jpg\" alt=\"Image\" width=\"800\" height=\"320\">\r\n");
      out.write("					<div class=\"carousel-caption\">\r\n");
      out.write("						<h3>다음주는 고급진 웹...</h3>\r\n");
      out.write("						<p>Open API, Ajax..</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- Left and right controls -->\r\n");
      out.write("			<a class=\"left carousel-control\" href=\"#myCarousel\" role=\"button\"\r\n");
      out.write("				data-slide=\"prev\"> <span\r\n");
      out.write("				class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span>\r\n");
      out.write("				<span class=\"sr-only\">Previous</span>\r\n");
      out.write("			</a> <a class=\"right carousel-control\" href=\"#myCarousel\" role=\"button\"\r\n");
      out.write("				data-slide=\"next\"> <span\r\n");
      out.write("				class=\"glyphicon glyphicon-chevron-right\" aria-hidden=\"true\"></span>\r\n");
      out.write("				<span class=\"sr-only\">Next</span>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<h5>\r\n");
      out.write("			<span class=\"label label-success\">Lorem</span>\r\n");
      out.write("		</h5>\r\n");
      out.write("		<br>\r\n");
      out.write("		<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n");
      out.write("			eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\r\n");
      out.write("			ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n");
      out.write("			aliquip ex ea commodo consequat. Excepteur sint occaecat cupidatat\r\n");
      out.write("			non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n");
      out.write("			laborum consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n");
      out.write("			ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis\r\n");
      out.write("			nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n");
      out.write("			consequat.</p>\r\n");
      out.write("		<hr>\r\n");
      out.write("\r\n");
      out.write("		<h4>Leave a Comment:</h4>\r\n");
      out.write("		<form role=\"form\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("				<textarea class=\"form-control\" rows=\"3\" required></textarea>\r\n");
      out.write("			</div>\r\n");
      out.write("			<button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n");
      out.write("		</form>\r\n");
      out.write("		<br> <br>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
