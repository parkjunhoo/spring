<<스프링 MVC프로젝트 구성>>

[프로젝트 실습]
1. web.xml에 DispatcherServlet이 등록되어 있는지 확인
2. spring 프레임워크를 실행할 수 있도록 설정하기 위한 설정 파일은 기본이
	/WEB-INF/spring/appServlet/servlet-context.xml파일
	경로를 변경할 수 있다.
	경로나 파일명이 변경되면 web.xml파일에서 경로를 수정하면 된다.
	
3.view파일은 WEB-INF아래 원하는 폴더를 만들고 작업
	기본설정을 변경해야 한다.
	--------
	/WEB-INF/config/spring-config/xml
	
[스프링 MVC 아키텍쳐]
- 스프링 MVC는 역할을 분리
- 기본으로 frontController 패턴이 적용되어 있음

- DispatcherServlet : 클라이언트의 요청을 받아서 요청을 분석하고 MVC아키텍쳐 안의 구성 컴포넌트들을 호출해서 작업
- HandlerMapping 	 : DispatcherServlet이 전달해준 매핑정보(요청 path)를 이용해서 실행할 컨트롤러를 찾아서 DispatcherServlet에 전달
- HandlerAdapter	 : 컨트롤러를 실행하고 실행결과를 DispatcherServlet에 전달(ModelAndView객체 - 모델과 View의 정보)
- Controller 			 : 개발자가 웹에서 처리하고 싶은 내용을 기술 (서블릿에서 작업했던 내용을 컨트롤러에서 작업)
							    Action과 같은 역할
							    이전버전에서는 Controller가 되기 위해 상속받아야 하는 클래스와 인터페이스가 있었으나 3.0이후 버전부터는 어노테이션을 기반으로
							    컨트롤러로 인식함
							    실제로는 컨트롤러는 서비스를 호출하는 역할
							    
- ViewResolver		 : DispatcherServlet이 넘겨준 뷰의 정보를 기반으로 설정파일에서 어떤 뷰를 만들어야 하는지 정보를 찾아서 넘겨준다.
- View					 : 실제 응답할 뷰를 만들어 리턴


[미션]
	secondPro라는 spring mvc project 만들기
	com.multi.second.Pro
	스프링 설정파일 : WEB-INF/config/spring-config.xml로 수정
	라이브러리 : 스프링 4.2.4 , 자바 1.8
	
[컨트롤러]
- spring mvc 프레임워크 안에서 웹을 서비스하기 위해서
   컨트롤러를 만들어야 한다.
- 컨트롤러 라는 것을 프레임워크 내부에서 인식할 수 있도록 하려면
   컨트롤러 클래스를 상속하거나 @Controller로 클래스 위에서
   선언해주면서 내부에서 컴파일 될때 컨트롤러로 인식